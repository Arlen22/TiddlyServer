{"title":"$:/plugins/tiddlywiki/savetrail","description":"Auto-download modified tiddlers","author":"JeremyRuston","core-version":">=5.0.0","list":"readme settings","version":"5.1.18-prerelease","plugin-type":"plugin","dependents":"","type":"application/json","tiddlers":{"$:/config/SaveTrailPlugin/enable-drafts":{"title":"$:/config/SaveTrailPlugin/enable-drafts","text":"no"},"$:/config/SaveTrailPlugin/enable":{"title":"$:/config/SaveTrailPlugin/enable","text":"yes"},"$:/config/SaveTrailPlugin/sync-drafts-filter":{"title":"$:/config/SaveTrailPlugin/sync-drafts-filter","text":"[is[tiddler]has[draft.of]]"},"$:/plugins/tiddlywiki/savetrail/readme":{"title":"$:/plugins/tiddlywiki/savetrail/readme","text":"This plugin causes TiddlyWiki to continuously download (as a JSON file) the contents of any tiddler that is manually changed by any of several means:\n\n* Confirming an edit\r\n* Deleting tiddlers\r\n* Imports\r\n* Renames/relinks\r\n* Optionally, typing in draft tiddlers can trigger a download\n\nWhere appropriate, separate 'before' and 'after' files are downloaded. Configured correctly, the browser will download the files silently in the background, and they can be used as a backup in case of accidental data loss.\n\n''CAUTION'': Using this plugin will generate a //lot// of files in your downloads folder! Some points to watch:\n\n* This plugin is pretty much unusable unless your browser is set up to download files automatically, without prompting for the location\r\n* Automatic file downloading doesn't work in all browsers - in particular, Safari and Internet Explorer do not currently support the [[necessary HTML5 feature|http://caniuse.com/download]]\r\n* Be aware of the privacy implications of leaving a plaintext trail of all of your edits. You should only enable this plugin on computers that your trust and with content that is not sensitive\r\n* The plugin uses the tiddler title plus a timestamp to generate a filename for the downloaded file, but some browsers ignore the specified title and generate their own title for each downloaded file\n\nOther points to note:\n\n* By default, after a draft tiddler has been modified the plugin waits until at least one second has elapsed since the last typing before it attempts to download the tiddler. This reduces the number of times that rapidly changing tiddlers are saved\r\n* This plugin can be used with both the single file HTML configuration and under Node.js because it is independent of the usual saving and syncing processes\r\n"},"$:/plugins/tiddlywiki/savetrail/savetrail.js":{"title":"$:/plugins/tiddlywiki/savetrail/savetrail.js","text":"/*\\\r\ntitle: $:/plugins/tiddlywiki/savetrail/savetrail.js\r\ntype: application/javascript\r\nmodule-type: startup\r\n\r\nA startup module to download every changed tiddler as a JSON file\r\n\r\n\\*/\r\n(function(){\r\n\r\n/*jslint node: true, browser: true */\r\n/*global $tw: false */\r\n\"use strict\";\r\n\r\n// Export name and synchronous status\r\nexports.name = \"savetrail\";\r\nexports.platforms = [\"browser\"];\r\nexports.after = [\"startup\"];\r\nexports.synchronous = true;\r\n\r\n// Favicon tiddler\r\nvar ENABLE_TIDDLER_TITLE = \"$:/config/SaveTrailPlugin/enable\",\r\n\tENABLE_DRAFTS_TIDDLER_TITLE = \"$:/config/SaveTrailPlugin/enable-drafts\",\r\n\tSYNC_DRAFTS_FILTER_TIDDLER_TITLE = \"$:/config/SaveTrailPlugin/sync-drafts-filter\";\r\n\r\nexports.startup = function() {\r\n\t$tw.savetrail = $tw.savetrail || {};\r\n\t// Create a syncer to handle autosaving\r\n\t$tw.savetrail.syncadaptor = new SaveTrailSyncAdaptor();\r\n\t$tw.savetrail.syncer = new $tw.Syncer({\r\n\t\twiki: $tw.wiki,\r\n\t\tsyncadaptor: $tw.savetrail.syncadaptor,\r\n\t\ttitleSyncFilter: SYNC_DRAFTS_FILTER_TIDDLER_TITLE,\r\n\t\tlogging: false,\r\n\t\tdisableUI: true\r\n\t});\r\n\t// Add hooks for trapping user actions\r\n\t$tw.hooks.addHook(\"th-saving-tiddler\",function(tiddler) {\r\n\t\tif($tw.wiki.checkTiddlerText(ENABLE_TIDDLER_TITLE,\"yes\")) {\r\n\t\t\tvar oldTiddler = $tw.wiki.getTiddler(tiddler.fields.title);\r\n\t\t\tif(oldTiddler) {\r\n\t\t\t\tsaveTiddlerFile(oldTiddler,{reason: \"overwritten\"});\t\t\t\r\n\t\t\t}\r\n\t\t\tsaveTiddlerFile(tiddler,{reason: \"saved\"});\r\n\t\t}\r\n\t\treturn tiddler;\r\n\t});\r\n\t$tw.hooks.addHook(\"th-renaming-tiddler\",function(newTiddler,oldTiddler) {\r\n\t\tif($tw.wiki.checkTiddlerText(ENABLE_TIDDLER_TITLE,\"yes\")) {\r\n\t\t\tif(oldTiddler) {\r\n\t\t\t\tsaveTiddlerFile(oldTiddler,{reason: \"deleted\"});\t\t\t\r\n\t\t\t}\r\n\t\t\tsaveTiddlerFile(newTiddler,{reason: \"renamed\"});\r\n\t\t}\r\n\t\treturn newTiddler;\r\n\t});\r\n\t$tw.hooks.addHook(\"th-relinking-tiddler\",function(newTiddler,oldTiddler) {\r\n\t\tif($tw.wiki.checkTiddlerText(ENABLE_TIDDLER_TITLE,\"yes\")) {\r\n\t\t\tif(oldTiddler) {\r\n\t\t\t\tsaveTiddlerFile(oldTiddler,{reason: \"overwritten\"});\t\t\t\r\n\t\t\t}\r\n\t\t\tsaveTiddlerFile(newTiddler,{reason: \"relinked\"});\r\n\t\t}\r\n\t\treturn newTiddler;\r\n\t});\r\n\t$tw.hooks.addHook(\"th-importing-tiddler\",function(tiddler) {\r\n\t\tif($tw.wiki.checkTiddlerText(ENABLE_TIDDLER_TITLE,\"yes\")) {\r\n\t\t\tvar oldTiddler = $tw.wiki.getTiddler(tiddler.fields.title);\r\n\t\t\tif(oldTiddler) {\r\n\t\t\t\tsaveTiddlerFile(oldTiddler,{reason: \"overwritten\"});\t\t\t\r\n\t\t\t}\r\n\t\t\tsaveTiddlerFile(tiddler,{reason: \"imported\"});\r\n\t\t}\r\n\t\treturn tiddler;\r\n\t});\r\n\t$tw.hooks.addHook(\"th-deleting-tiddler\",function(tiddler) {\r\n\t\tif($tw.wiki.checkTiddlerText(ENABLE_TIDDLER_TITLE,\"yes\")) {\r\n\t\t\tsaveTiddlerFile(tiddler,{reason: \"deleted\"});\r\n\t\t}\r\n\t\treturn tiddler;\r\n\t});\r\n};\r\n\r\nfunction SaveTrailSyncAdaptor(options) {\r\n\tthis.logger = new $tw.utils.Logger(\"SaveTrail\");\r\n}\r\n\r\nSaveTrailSyncAdaptor.prototype.name = \"savetrail\";\r\n\r\nSaveTrailSyncAdaptor.prototype.isReady = function() {\r\n\t// The savetrail adaptor is always ready\r\n\treturn true;\r\n};\r\n\r\nSaveTrailSyncAdaptor.prototype.getTiddlerInfo = function(tiddler) {\r\n\treturn {};\r\n};\r\n\r\n/*\r\nSave a tiddler and invoke the callback with (err,adaptorInfo,revision)\r\n*/\r\nSaveTrailSyncAdaptor.prototype.saveTiddler = function(tiddler,callback) {\r\n\tif($tw.wiki.checkTiddlerText(ENABLE_TIDDLER_TITLE,\"yes\")) {\r\n\t\tvar isDraft = $tw.utils.hop(tiddler.fields,\"draft.of\");\r\n\t\tif(!isDraft || $tw.wiki.checkTiddlerText(ENABLE_DRAFTS_TIDDLER_TITLE,\"yes\")) {\r\n\t\t\tsaveTiddlerFile(tiddler,{reason: \"modified\"});\r\n\t\t}\r\n\t}\r\n\tcallback(null);\r\n};\r\n\r\n/*\r\nLoad a tiddler and invoke the callback with (err,tiddlerFields)\r\n*/\r\nSaveTrailSyncAdaptor.prototype.loadTiddler = function(title,callback) {\r\n\tcallback(null,null);\r\n};\r\n\r\n/*\r\nDelete a tiddler and invoke the callback with (err)\r\n*/\r\nSaveTrailSyncAdaptor.prototype.deleteTiddler = function(title,callback,options) {\r\n\tcallback(null);\r\n};\r\n\r\nfunction saveTiddlerFile(tiddler,options) {\r\n\toptions = options || {};\r\n\tvar reason = options.reason || \"changed\",\r\n\t\tillegalFilenameCharacters = /<|>|\\:|\\\"|\\/|\\\\|\\||\\?|\\*|\\^|\\s/g,\r\n\t\tfixedTitle = $tw.utils.transliterate(tiddler.fields.title).replace(illegalFilenameCharacters,\"_\"),\r\n\t\tformattedDate = $tw.utils.stringifyDate(new Date()),\r\n\t\tfilename =  fixedTitle + \".\" + formattedDate + \".\" + reason + \".json\",\r\n\t\tfields = new Object();\r\n\tfor(var field in tiddler.fields) {\r\n\t\tfields[field] = tiddler.getFieldString(field);\r\n\t}\r\n\tvar text = JSON.stringify([fields],null,$tw.config.preferences.jsonSpaces),\r\n\t\tlink = document.createElement(\"a\");\r\n\tlink.setAttribute(\"target\",\"_blank\");\r\n\tlink.setAttribute(\"rel\",\"noopener noreferrer\");\r\n\tif(Blob !== undefined) {\r\n\t\tvar blob = new Blob([text], {type: \"text/plain\"});\r\n\t\tlink.setAttribute(\"href\", URL.createObjectURL(blob));\r\n\t} else {\r\n\t\tlink.setAttribute(\"href\",\"data:text/plain,\" + encodeURIComponent(text));\r\n\t}\r\n\tlink.setAttribute(\"download\",filename);\r\n\tdocument.body.appendChild(link);\r\n\tlink.click();\r\n\tdocument.body.removeChild(link);\r\n}\r\n\r\n})();\r\n","type":"application/javascript","module-type":"startup"},"$:/plugins/tiddlywiki/savetrail/settings":{"title":"$:/plugins/tiddlywiki/savetrail/settings","text":"\r\n<$checkbox tiddler=\"$:/config/SaveTrailPlugin/enable\" field=\"text\" checked=\"yes\" unchecked=\"no\"> Enable automatic saving of modified tiddlers</$checkbox>\n\n<$checkbox tiddler=\"$:/config/SaveTrailPlugin/enable-drafts\" field=\"text\" checked=\"yes\" unchecked=\"no\"> Include automatic saving of draft tiddlers (warning: generates a lot of download files)</$checkbox>\r\n"}}}